plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.kapt)
    alias(libs.plugins.kotlin.parcelize)
    alias(libs.plugins.hilt)
}

android {
    namespace = "mobi.lab.sample.domain"

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled = true

        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        compileSdkVersion(libs.versions.android.sdk.compile.get())
        targetSdkVersion(libs.versions.android.sdk.target.get())
        minSdkVersion(libs.versions.android.sdk.min.get())
    }

    lint {
        // Workaround for a bug in Kotlin extension's Parcelize
        warning("ParcelCreator")
    }

    testOptions.unitTests.all {
        testLogging {
            events("passed", "skipped", "failed", "standardOut", "standardError")
            // Always show output even if the result has not changed
            outputs.upToDateWhen { false }
            // Show standard stream outputs if used
            showStandardStreams = true
        }
    }
}

hilt {
    // This flag reduces incremental compilation times by reducing how often an incremental change causes a rebuild of the Dagger components.
    // See https://dagger.dev/hilt/gradle-setup.html#aggregating-task
    enableAggregatingTask = true
}

kapt {
    // If Hilt is used in a Kotlin project, then Kapt should be configured to keep the correct error types.
    // See https://dagger.dev/hilt/gradle-setup.html#using-hilt-with-kotlin
    correctErrorTypes = true
}

// Set kapt jvm version. https://youtrack.jetbrains.com/issue/KT-55947/Unable-to-set-kapt-jvm-target-version
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    // Testing
    libsHelper.addUnitTestDependencies(it)
    // DI
    libsHelper.addDependencyInjectionDependencies(it)

    implementation libs.kotlin
    coreLibraryDesugaring libs.jdk.desugar

    implementation libs.rxjava
    implementation libs.timber

    implementation project(":app-common")
}
